#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Author: Daniel Rode
# Created: 14 Nov 2024
# Updated: 18 Mar 2025


# Description: Clip a given raster file to a polygon.


import sys
from sys import exit
from pathlib import Path

import pyogrio
import rasterio
import rasterio.mask


HELP_TEXT = "Usage: clip-rast  RAST_PATH  SHP_PATH  OUT_RAST_PATH"


# Parse command line arguments
args = sys.argv[1:]
try:
    rast_path = Path(args[0])
    shape_path = Path(args[1])
    out_path = Path(args[2])
except IndexError:
    print(HELP_TEXT)
    exit(1)

# Import polygon data
gdf = pyogrio.read_dataframe(shape_path)

# Import region of raster data within polygons
with rasterio.open(rast_path) as f:
    rast, rast_transform = rasterio.mask.mask(
      f, shapes.to_crs(f.crs)['geometry'], crop=True
    )
    rast_meta = f.meta

# Save clipped raster to file
rast_meta.update({
    "driver": "GTiff",
    "height": rast.shape[1],
    "width": rast.shape[2],
    "transform": rast_transform,
})
with rasterio.open(out_path, "w", **rast_meta) as f:
    f.write(rast)
